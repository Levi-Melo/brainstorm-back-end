{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "//localhost:3333/api",
      "description": "URL em ambiente de desenvolvimento"
    }
  ],
  "info": {
    "title": "Brainstorm",
    "description": "Documentação da API do gerenciamento de informações do website Brainstorm.",
    "version": "1.0.0",
    "x-logo": {
      "url": "",
      "backgroundColor": "#F1F1F1",
      "altText": "Brainstorm logo"
    }
  },
  "tags": [
    {
      "name": "users",
      "description": "Rota para gerenciamento de informações relacionadas aos registros de usuários (users)."
    },
    {
      "name": "courses",
      "description": "Rota para gerenciamento de informações relacionadas aos registros de cursos (courses)."
    },
    {
      "name": "Teachers",
      "description": "Rota para gerenciamento de informações relacionadas aos registros de professores (teachers)."
    },
    {
      "name": "classes",
      "description": "Rota para gerenciamento de informações relacionadas aos registros de aulas (classes)."
    },
    {
      "name": "categories",
      "description": "Rota para gerenciamento de informações relacionadas aos registro de Categorias (Category)."
    },
    {
      "name": "answers",
      "description": "Rota para gerenciamento de informações relacionadas aos registro de respostas (Answer)."
    },
    {
      "name": "contact",
      "description": "Rota para gerenciamento de informações relacionadas a entidade de contato (Contact)."
    },
    {
      "name": "complementary Answers",
      "description": "Rota para gerenciamento de informações relacionadas a entidade de respostas complementares (Complementary Answers)."
    },
    {
      "name": "contact_model",
      "x-displayName": "Contact (Contato)",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Contact\" />\n"
    },
    {
      "name": "user_model",
      "x-displayName": "User (Usuário)",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/User\" />\n"
    },
    {
      "name": "Category_model",
      "x-displayName": "Category (Categoria)",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Category\" />"
    },
    {
      "name": "ComplementaryAnswer_model",
      "x-displayName": "Complementary Answer (Resposta complementar)",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ComplementaryAnswer\" />"
    },
    {
      "name": "answers_model",
      "x-displayName": "Answer (Resposta)",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Answer\" />"
    },
    {
      "name": "Class_model",
      "x-displayName": "Class (Aula)",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Class\" />"
    },
    {
      "name": "course_model",
      "x-displayName": "Course (Curso)",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Course\" />"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Rotas - Usuários",
      "tags": ["users", "contacts"]
    },
    {
      "name": "Rotas - Cursos",
      "tags": ["categories", "courses"]
    },
    {
      "name": "Rotas - Aulas",
      "tags": ["answers", "complementary Answers", "classes"]
    },
    {
      "name": "Models - Usuários",
      "tags": ["user_model", "contact_model"]
    },
    {
      "name": "Models - Cursos",
      "tags": ["Category_model", "course_model"]
    },
    {
      "name": "Models - Aulas",
      "tags": ["ComplementaryAnswer_model", "Class_model", "answers_model"]
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["users"],
        "summary": "Adicionar novo usuário",
        "description": "Endpoint para a adição de um novo registro de um usuário ao sistema.",
        "operationId": "addUser",
        "responses": {
          "201": {
            "description": "Adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/User"
        }
      },
      "get": {
        "tags": ["users"],
        "summary": "Pesquisar usuários",
        "description": "Endpoint para a pesquisa de registros de usuários de acordo com os parâmetros requisitados.",
        "operationId": "filterUser",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Nome do usuário `PESQUISA PARCIAL`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cpf",
            "in": "query",
            "description": "CPF completo do usuário",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "E-mail completo do usuário",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rg",
            "in": "query",
            "description": "RG completo do usuário",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Situação do registro.\n * `true` - Ativado\n * `false` - Desativado",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado com os parâmetros inseridos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Nenhum registro com esses parâmetros encontrado"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["users"],
        "summary": "Editar um usuário",
        "description": "Endpoint para edição de dados de um registro de um usuário. É possível enviar apenas os campos que necessitam de edição. Obrigatório a inserção do ID do registro a ser editado.",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryError"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Consultar usuário por ID",
        "description": "Endpoint para consulta de um único registro de um usuário, utilizando seu identificador único (ID).",
        "operationId": "getIdUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do usuário a ser consultado",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Ativar um usuário",
        "description": "Endpoint para a ativação de um registro de um usuário.",
        "operationId": "activeUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do usuário",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Desativar um usuário",
        "description": "Endpoint para a desativação de um registro de um usuário.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do usuário",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/users/confirm": {
      "post": {
        "tags": ["users"],
        "summary": "Confirmar conta de usuário",
        "description": "Endpoint para a confirmação de conta de um usuário.",
        "operationId": "confirmUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserConfirm"
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ERRO: Código de confirmação inválido"
                    },
                    { "$ref": "#/components/schemas/Error" }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/users/reset": {
      "post": {
        "tags": ["users"],
        "summary": "Recuperar senha do usuário",
        "description": "Endpoint para a recuperação de senha.",
        "operationId": "resetPassUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserResetPass"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ERRO: Código de confirmação inválido"
                    },
                    { "$ref": "#/components/schemas/Error" }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Permissão negada",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ERRO: O usuário não confirmou sua conta ainda"
                    },
                    {
                      "$ref": "#/components/schemas/ERRO: Não é possível trocar a senha de uma conta desativada"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["categories"],
        "summary": "Adicionar nova Categoria",
        "description": "Endpoint para a adição de um novo registro de categoria ao sistema.",
        "operationId": "addCategory",
        "requestBody": {
          "$ref": "#/components/requestBodies/Category"
        },
        "responses": {
          "201": {
            "description": "Adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["categories"],
        "summary": "Listar Categorias",
        "description": "Endpoint para a listagem dos Categorias registrados.",
        "operationId": "listCategory",
        "responses": {
          "200": {
            "description": "Devolve uma lista com todos os Categorias",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoriesearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum Categoria encontrado"
          }
        }
      },
      "patch": {
        "tags": ["categories"],
        "summary": "Editar um usuário",
        "description": "Endpoint para edição de dados de um registro de um categoria. É possível enviar apenas os campos que necessitam de edição. Obrigatório a inserção do ID do registro a ser editado.",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryError"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["categories"],
        "summary": "Consultar Categoria por ID",
        "description": "Endpoint para consulta de um único registro de Categoria, utilizando seu identificador único (ID).",
        "operationId": "getIdCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro do Categoria",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["categories"],
        "summary": "Ativar um Categoria",
        "description": "Endpoint para a ativação de um registro de Categoria.",
        "operationId": "activeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro do Categoria",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["categories"],
        "summary": "Desativar um Categoria",
        "description": "Endpoint para a desativação de um registro de Categoria.",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro do Categoria",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "tags": ["contacts"],
        "summary": "Adicionar novo contato",
        "description": "Endpoint para a adição de um novo registro de contato ao sistema.",
        "operationId": "addContact",
        "requestBody": {
          "$ref": "#/components/requestBodies/Contact"
        },
        "responses": {
          "201": {
            "description": "Adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["contacts"],
        "summary": "Pesquisar contatos",
        "description": "Endpoint para a pesquisa de registros de contatos de acordo com os parâmetros requisitados. Retorna uma lista dos contatos que batem com os critérios inseridos.",
        "operationId": "filterContact",
        "parameters": [
          {
            "name": "contactName",
            "in": "query",
            "description": "Complemento. Suporta pesquisa parcial.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Número do telefone completo",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "Identificador único do usuário dono do contato",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum contato encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Nenhum registro com esses parâmetros encontrado"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["contacts"],
        "summary": "Editar um contato",
        "description": "Endpoint para edição de dados de um registro de um contato. É possível enviar apenas os campos que necessitam de edição. Obrigatório a inserção do ID do registro a ser editado.",
        "operationId": "updateContact",
        "requestBody": {
          "$ref": "#/components/requestBodies/ContactUpdate"
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Contato não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": ["contacts"],
        "summary": "Consultar contato por ID",
        "description": "Endpoint para consulta de um único registro de um contato, utilizando seu identificador único (ID).",
        "operationId": "getIdContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro do contato",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactJoinResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Contato não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contacts"],
        "summary": "Ativar um contato",
        "description": "Endpoint para a ativação de um registro de contato.",
        "operationId": "activeContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro do contato",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Contato não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["contacts"],
        "summary": "Desativar um contato",
        "description": "Endpoint para a desativação de um registro de contato.",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro do contato",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Contato não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/answers": {
      "post": {
        "tags": ["answers"],
        "summary": "Adicionar nova reposta a uma pergunta",
        "description": "Endpoint para a adição de um novo registro de resposta ao sistema.",
        "operationId": "addAnswer",
        "requestBody": {
          "$ref": "#/components/requestBodies/Answer"
        },
        "responses": {
          "201": {
            "description": "Adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["answers"],
        "summary": "Listar respostas",
        "description": "Endpoint para a listagem das respostas registrados.",
        "operationId": "listAnswers",
        "responses": {
          "200": {
            "description": "Devolve uma lista com todos os Categorias",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswersearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum Categoria encontrado"
          }
        }
      },
      "patch": {
        "tags": ["answers"],
        "summary": "Editar uma resposta",
        "description": "Endpoint para edição de dados de um registro de uma resposta. É possível enviar apenas os campos que necessitam de edição. Obrigatório a inserção do ID do registro a ser editado.",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryError"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/answers/{id}": {
      "get": {
        "tags": ["answers"],
        "summary": "Consultar Categoria por ID",
        "description": "Endpoint para consulta de um único registro de resposta, utilizando seu identificador único (ID).",
        "operationId": "getIdAnswers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de resposta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["answers"],
        "summary": "Ativar um Categoria",
        "description": "Endpoint para a ativação de um registro de resposta.",
        "operationId": "activeanswers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de resposta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["answers"],
        "summary": "Desativar um Categoria",
        "description": "Endpoint para a desativação de um registro de resposta.",
        "operationId": "deleteAnswers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de resposta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/complementaryAnswers": {
      "post": {
        "tags": ["complementary Answers"],
        "summary": "Adicionar nova resposta complementar",
        "description": "Endpoint para a adição de um novo registro de categoria ao sistema.",
        "operationId": "addComplementaryAnswer",
        "requestBody": {
          "$ref": "#/components/requestBodies/ComplementaryAnswer"
        },
        "responses": {
          "201": {
            "description": "Adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplementaryAnswerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["complementary Answers"],
        "summary": "Listar respostas complementares",
        "description": "Endpoint para a listagem dos Categorias registrados.",
        "operationId": "listComplementaryAnswer",
        "responses": {
          "200": {
            "description": "Devolve uma lista com todos os Categorias",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplementaryAnswersearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum Categoria encontrado"
          }
        }
      },
      "patch": {
        "tags": ["complementary Answers"],
        "summary": "Editar uma resposta complementar",
        "description": "Endpoint para edição de dados de um registro de uma resposta. É possível enviar apenas os campos que necessitam de edição. Obrigatório a inserção do ID do registro a ser editado.",
        "operationId": "updateComplementaryAnswer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplementaryAnswerUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryError"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/complementaryAnswers/{id}": {
      "get": {
        "tags": ["complementary Answers"],
        "summary": "Consultar resposta complementar por ID",
        "description": "Endpoint para consulta de um único registro de resposta complementar, utilizando seu identificador único (ID).",
        "operationId": "getIdAnswers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de resposta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplementaryAnswerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["complementary Answers"],
        "summary": "Ativar um resposta complementar",
        "description": "Endpoint para a ativação de um registro de resposta.",
        "operationId": "activeanswers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de resposta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["complementary Answers"],
        "summary": "Desativar um resposta complementar",
        "description": "Endpoint para a desativação de um registro de resposta complementar.",
        "operationId": "deleteAnswers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de resposta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/classes": {
      "post": {
        "tags": ["classes"],
        "summary": "Adicionar nova aula",
        "description": "Endpoint para a adição de um novo registro de aula ao sistema.",
        "operationId": "addClass",
        "requestBody": {
          "$ref": "#/components/requestBodies/Class"
        },
        "responses": {
          "201": {
            "description": "Adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["classes"],
        "summary": "Listar ",
        "description": "Endpoint para a listagem de aulas registrados.",
        "operationId": "listClass",
        "responses": {
          "200": {
            "description": "Devolve uma lista com todos os Categorias",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClasssearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum Categoria encontrado"
          }
        }
      },
      "patch": {
        "tags": ["classes"],
        "summary": "Editar um registro de aula",
        "description": "Endpoint para edição de dados de um registro de uma aula. É possível enviar apenas os campos que necessitam de edição. Obrigatório a inserção do ID do registro a ser editado.",
        "operationId": "updateClass",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryError"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/classes/{id}": {
      "get": {
        "tags": ["classes"],
        "summary": "Consultar resposta complementar por ID",
        "description": "Endpoint para consulta de um único registro de aula, utilizando seu identificador único (ID).",
        "operationId": "getIdClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de aula",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["classes"],
        "summary": "Ativar um aula",
        "description": "Endpoint para a ativação de um registro de aula.",
        "operationId": "activeClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de aula",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["classes"],
        "summary": "Desativar uma aula",
        "description": "Endpoint para a desativação de um registro de aula.",
        "operationId": "deleteClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de aula",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/courses": {
      "post": {
        "tags": ["courses"],
        "summary": "Adicionar novo curso",
        "description": "Endpoint para a adição de um novo registro de curso ao sistema.",
        "operationId": "addClass",
        "requestBody": {
          "$ref": "#/components/requestBodies/Course"
        },
        "responses": {
          "201": {
            "description": "Adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["courses"],
        "summary": "Listar cursos",
        "description": "Endpoint para a listagem dos cursos registrados.",
        "operationId": "listCourse",
        "responses": {
          "200": {
            "description": "Devolve uma lista com todos os Categorias",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum Categoria encontrado"
          }
        }
      },
      "patch": {
        "tags": ["courses"],
        "summary": "Editar uma cursos",
        "description": "Endpoint para edição de dados de um registro de um curso. É possível enviar apenas os campos que necessitam de edição. Obrigatório a inserção do ID do registro a ser editado.",
        "operationId": "updateClass",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryError"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "tags": ["courses"],
        "summary": "Consultar curso por ID",
        "description": "Endpoint para consulta de um único registro de curso, utilizando seu identificador único (ID).",
        "operationId": "getIdClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de resposta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["courses"],
        "summary": "Ativar um curso",
        "description": "Endpoint para a ativação de um curso.",
        "operationId": "activeClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de resposta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Desativar um curso",
        "description": "Endpoint para a desativação de um registro de resposta complementar.",
        "operationId": "deleteClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de resposta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/teachers": {
      "post": {
        "tags": ["Teachers"],
        "summary": "Adicionar novo registro de professor",
        "description": "Endpoint para a adição de um novo registro de professor ao sistema.",
        "operationId": "addClass",
        "requestBody": {
          "$ref": "#/components/requestBodies/Teacher"
        },
        "responses": {
          "201": {
            "description": "Adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["Teachers"],
        "summary": "Listar professores",
        "description": "Endpoint para a listagem dos professores registrados.",
        "operationId": "listCourse",
        "responses": {
          "200": {
            "description": "Devolve uma lista com todos professores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachersearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum Categoria encontrado"
          }
        }
      },
      "patch": {
        "tags": ["Teachers"],
        "summary": "Editar uma professor",
        "description": "Endpoint para edição de dados de um registro de um professor. É possível enviar apenas os campos que necessitam de edição. Obrigatório a inserção do ID do registro a ser editado.",
        "operationId": "updateClass",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryError"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/teachers/{id}": {
      "get": {
        "tags": ["Teachers"],
        "summary": "Consultar professor por ID",
        "description": "Endpoint para consulta de um único registro de professor, utilizando seu identificador único (ID).",
        "operationId": "getIdClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de professor",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Teachers"],
        "summary": "Ativar um professor",
        "description": "Endpoint para a ativação de um professor.",
        "operationId": "activeClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de professor",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Teachers"],
        "summary": "Desativar um professor",
        "description": "Endpoint para a desativação de um registro de professor.",
        "operationId": "deleteClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registro de professor",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Erro de requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERRO: Registro não encontrado"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false
          },
          "errors": {
            "type": "string",
            "description": "Mensagem de erro"
          }
        }
      },
      "ERRO: ID inválido ou mal formatado": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false,
            "description": false
          },
          "errors": {
            "type": "string",
            "description": "Invalid or bad-formatted search ID",
            "example": "Invalid or bad-formatted search ID"
          }
        }
      },
      "ERRO: Registro não encontrado": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false,
            "description": false
          },
          "errors": {
            "type": "string",
            "description": "Couldn't find a data with id {id}",
            "example": "Couldn't find a data with id {id}"
          }
        }
      },
      "ERRO: Nenhum registro com esses parâmetros encontrado": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false,
            "description": false
          },
          "errors": {
            "type": "string",
            "description": "Couldn't find a data with these params",
            "example": "Couldn't find a data with these params"
          }
        }
      },
      "QueryError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false
          },
          "errors": {
            "type": "string",
            "description": "Couldn't find a data with id {id}",
            "example": "Couldn't find a data with id {id}"
          }
        }
      },
      "User": {
        "type": "object",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "1": "#/components/schemas/User",
            "2": "#/components/schemas/UserProvider",
            "3": "#/components/schemas/UserPoliceman",
            "4": "#/components/schemas/UserClient"
          }
        },
        "properties": {
          "id": {
            "description": "Identificador único do usuário",
            "type": "string"
          },
          "confirmationCode": {
            "description": "Código para confirmação de conta, gerado no registro do usuário",
            "type": "string"
          },
          "confirmedAccount": {
            "description": "Situação da conta do usuário (e-mail) do usuário; se foi confirmada ou não",
            "type": "boolean",
            "default": false
          },
          "name": {
            "description": "Nome completo do usuário",
            "type": "string"
          },
          "cpf": {
            "description": "Número do CPF do usuário",
            "type": "string"
          },
          "rg": {
            "description": "Número do RG do usuário",
            "type": "string"
          },
          "email": {
            "description": "E-mail do usuário, utilizado para login e confirmação de conta",
            "type": "string",
            "format": "email"
          },
          "password": {
            "description": "Hash da senha do usuário",
            "type": "string"
          },
          "type": {
            "description": "Tipo do usuário. Determinará seu fluxo de trabalho no sistema de acordo com suas funcionalidades relacionadas. Também criará um registro em um dos outros Models relacionados as rotas de usuário. Opções de tipo:\n * `Aluno` - Usuário Aluno\n * `Professor` - Usuário Professor",
            "type": "string",
            "enum": ["Aluno", "Professor"]
          },
          "category": {
            "description": "Nível de acesso do usuário",
            "type": "object",
            "$ref": "#/components/schemas/Category"
          },
          "createdAt": {
            "description": "Data e hora de criação",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "description": "Data e hora da modificação",
            "type": "string",
            "format": "date-time"
          },
          "active": {
            "description": "Situação do registro.\n * `true` - Ativado\n * `false` - Desativado",
            "type": "boolean",
            "default": true
          }
        }
      },
      "UserPost": {
        "type": "object",
        "required": ["email", "name", "password", "rg", "cpf", "type"],
        "properties": {
          "name": {
            "description": "Nome completo do usuário",
            "type": "string"
          },
          "cpf": {
            "description": "Número do CPF do usuário",
            "type": "string"
          },
          "rg": {
            "description": "Número do RG do usuário",
            "type": "string"
          },
          "email": {
            "description": "E-mail do usuário",
            "type": "string",
            "format": "email"
          },
          "password": {
            "description": "Senha do usuário",
            "type": "string"
          },
          "type": {
            "description": "Tipo do usuário. Determinará seu fluxo de trabalho no sistema de acordo com suas funcionalidades relacionadas. Também criará um registro em um dos outros Models relacionados as rotas de usuário. Opções de tipo:\n * `Aluno` - Usuário Aluno\n * `Professor` - Usuário Professor",
            "type": "string",
            "enum": ["Aluno", "Professor"]
          }
        }
      },
      "UserResetPost": {
        "type": "object",
        "required": ["email", "confirmationCode", "newPassword"],
        "properties": {
          "email": {
            "type": "string",
            "description": "E-mail do usuário"
          },
          "confirmationCode": {
            "type": "string",
            "description": "Código de confirmação de pedido de recuperação"
          },
          "newPassword": {
            "type": "string",
            "description": "Nova senha"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único do registro que será editado"
          },
          "cpf": {
            "type": "string"
          },
          "rg": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["Aluno", "Professor"]
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Situação da requisição"
          },
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserConfirmResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Situação da requisição"
          },
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserResetResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Situação da requisição"
          },
          "data": {
            "type": "string",
            "example": "Password reset with success"
          }
        }
      },
      "UserSearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "ERRO: O usuário não confirmou sua conta ainda": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false,
            "description": false
          },
          "errors": {
            "type": "string",
            "example": "The user does not have confirmed her account",
            "description": "The user does not have confirmed her account"
          }
        }
      },
      "ERRO: Não é possível trocar a senha de uma conta desativada": {
        "summary": "Não é possível",
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false,
            "description": false
          },
          "errors": {
            "type": "string",
            "example": "Cannot change password from an inactive account",
            "description": "Cannot change password from an inactive account"
          }
        }
      },
      "ERRO: Código de confirmação inválido": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false,
            "description": false
          },
          "errors": {
            "type": "string",
            "example": "Wrong confirmation code",
            "description": "Wrong confirmation code"
          }
        }
      },
      "Contact": {
        "type": "object",
        "required": ["phoneNumber", "user"],
        "properties": {
          "active": {
            "description": "Situação do contato",
            "type": "boolean",
            "default": true
          },
          "id": {
            "description": "Identificador único do contato",
            "type": "string"
          },
          "contactName": {
            "description": "Nome do contato",
            "type": "string"
          },
          "phoneNumber": {
            "description": "Número do telefone relacionado",
            "type": "string"
          },
          "user": {
            "description": "Identificador único do usuário dono desse contato",
            "type": "string"
          },
          "createdAt": {
            "description": "Data e hora de criação",
            "type": "string"
          },
          "updatedAt": {
            "description": "Data e hora da modificação",
            "type": "string"
          }
        }
      },
      "ContactJoin": {
        "type": "object",
        "required": ["phoneNumber", "user"],
        "properties": {
          "active": {
            "description": "Situação do contato",
            "type": "boolean",
            "default": true
          },
          "id": {
            "description": "Identificador único do contato",
            "type": "string"
          },
          "contactName": {
            "description": "Nome do contato",
            "type": "string"
          },
          "phoneNumber": {
            "description": "Número do telefone relacionado",
            "type": "string"
          },
          "user": {
            "type": "object",
            "$ref": "#/components/schemas/User"
          },
          "createdAt": {
            "description": "Data e hora de criação",
            "type": "string"
          },
          "updatedAt": {
            "description": "Data e hora da modificação",
            "type": "string"
          }
        }
      },
      "ContactPost": {
        "type": "object",
        "required": ["contactName", "phoneNumber", "user"],
        "properties": {
          "contactName": {
            "description": "Nome do contato",
            "type": "string"
          },
          "phoneNumber": {
            "description": "Número do telefone relacionado",
            "type": "string"
          },
          "user": {
            "description": "Identificador único do usuário dono desse contato",
            "type": "string"
          }
        }
      },
      "ContactUpdate": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único do registro que será editado"
          },
          "contactName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Situação da requisição"
          },
          "data": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "ContactJoinResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Situação da requisição"
          },
          "data": {
            "$ref": "#/components/schemas/ContactJoin"
          }
        }
      },
      "ContactSearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Situação do registro.\n * `true` - Ativado\n * `false` - Desativado"
          },
          "name": {
            "type": "string",
            "description": "Nome do Categoria"
          },
          "initials": {
            "type": "string",
            "description": "Sigla do Categoria"
          },
          "image": {
            "type": "string",
            "description": "link da imagem da categoria"
          },
          "createdAt": {
            "description": "Data e hora de criação",
            "type": "string",
            "format": "yyyy-mm-dd hh:mm:ss"
          },
          "updatedAt": {
            "description": "Data e hora da modificação",
            "type": "string",
            "format": "yyyy-mm-dd hh:mm:ss"
          }
        }
      },
      "CategoryPost": {
        "type": "object",
        "required": ["name", "initials", "image"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do Categoria"
          },
          "initials": {
            "type": "string",
            "description": "Sigla do Categoria"
          },
          "image": {
            "type": "string",
            "description": "link da imagem da categoria"
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Category"
          }
        }
      },
      "categoriesearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      },
      "CategoryUpdate": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único do Categoria"
          },
          "name": {
            "type": "string",
            "description": "Nome do Categoria"
          },
          "initials": {
            "type": "string",
            "description": "Sigla do Categoria"
          },
          "image": {
            "type": "string",
            "description": "link da imagem da categoria"
          },
          "createdAt": {
            "description": "Data e hora de criação",
            "type": "string",
            "format": "yyyy-mm-dd hh:mm:ss"
          },
          "updatedAt": {
            "description": "Data e hora da modificação",
            "type": "string",
            "format": "yyyy-mm-dd hh:mm:ss"
          }
        }
      },
      "Answer": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Texto da resposta"
          },
          "user": {
            "type": "string",
            "description": "identificador unico do usuário"
          },
          "question": {
            "type": "string",
            "description": "identificador unico da pergunta"
          }
        }
      },
      "AnswerPost": {
        "type": "object",
        "required": ["text", "user", "question"],
        "properties": {
          "text": {
            "type": "string",
            "description": "Texto da resposta"
          },
          "user": {
            "type": "string",
            "description": "identificador unico do usuário"
          },
          "question": {
            "type": "string",
            "description": "identificador unico da pergunta"
          }
        }
      },
      "AnswerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Answer"
          }
        }
      },
      "AnswersearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            }
          }
        }
      },
      "AnswerUpdate": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único do registro que será editado"
          },
          "text": {
            "type": "string",
            "description": "Texto da resposta"
          },
          "user": {
            "type": "string",
            "description": "identificador unico do usuário"
          },
          "question": {
            "type": "string",
            "description": "identificador unico da pergunta"
          }
        }
      },
      "ComplementaryAnswer": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Texto da resposta"
          },
          "user": {
            "type": "string",
            "description": "identificador unico do usuário"
          },
          "answer": {
            "type": "string",
            "description": "identificador unico da resposta"
          }
        }
      },
      "ComplementaryAnswerPost": {
        "type": "object",
        "required": ["text", "user", "answer"],
        "properties": {
          "text": {
            "type": "string",
            "description": "Texto da resposta"
          },
          "user": {
            "type": "string",
            "description": "identificador unico do usuário"
          },
          "answer": {
            "type": "string",
            "description": "identificador unico da resposta"
          }
        }
      },
      "ComplementaryAnswerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/ComplementaryAnswer"
          }
        }
      },
      "ComplementaryAnswersearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComplementaryAnswer"
            }
          }
        }
      },
      "ComplementaryAnswerUpdate": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único do registro que será editado"
          },
          "text": {
            "type": "string",
            "description": "Texto da resposta"
          },
          "user": {
            "type": "string",
            "description": "identificador unico do usuário"
          },
          "answer": {
            "type": "string",
            "description": "identificador unico de resposta"
          }
        }
      },
      "Class": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descrição do curso"
          },
          "link": {
            "type": "string",
            "description": "link da aula"
          },
          "name": {
            "type": "string",
            "description": "Nome da aula"
          },
          "course": {
            "type": "string",
            "description": "identificador unico de aula"
          }
        }
      },
      "ClassPost": {
        "type": "object",
        "required": ["description", "link", "name", "course"],
        "properties": {
          "description": {
            "type": "string",
            "description": "Descrição do curso"
          },
          "link": {
            "type": "string",
            "description": "link da aula"
          },
          "name": {
            "type": "string",
            "description": "Nome do curso"
          },
          "course": {
            "type": "string",
            "description": "identificador unico de curso"
          }
        }
      },
      "ClassResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Class"
          }
        }
      },
      "ClasssearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Class"
            }
          }
        }
      },
      "ClassUpdate": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único do registro que será editado"
          },
          "description": {
            "type": "string",
            "description": "Descrição do curso"
          },
          "link": {
            "type": "string",
            "description": "link da aula"
          },
          "name": {
            "type": "string",
            "description": "Nome do curso"
          },
          "course": {
            "type": "string",
            "description": "identificador unico de curso"
          }
        }
      },
      "Course": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "identificador unico da categoria do curso"
          },
          "certificated": {
            "type": "boolean",
            "description": "flag para saber se emite certificado ou não"
          },
          "name": {
            "type": "string",
            "description": "Nome do curso"
          },
          "image": {
            "type": "string",
            "description": "link da imagem do curso"
          },
          "description": {
            "type": "string",
            "description": "descrição de curso"
          },
          "user": {
            "type": "string",
            "description": "identificador unico de usuário"
          }
        }
      },
      "CoursePost": {
        "type": "object",
        "required": [
          "name",
          "category",
          "certificated",
          "description",
          "user",
          "image"
        ],
        "properties": {
          "category": {
            "type": "string",
            "description": "identificador unico da categoria do curso"
          },
          "certificated": {
            "type": "boolean",
            "description": "flag para saber se emite certificado ou não"
          },
          "name": {
            "type": "string",
            "description": "Nome do curso"
          },
          "image": {
            "type": "string",
            "description": "link da imagem do curso"
          },
          "description": {
            "type": "string",
            "description": "descrição de curso"
          },
          "user": {
            "type": "string",
            "description": "identificador unico de usuário"
          }
        }
      },
      "CourseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Course"
          }
        }
      },
      "CoursesearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          }
        }
      },
      "CourseUpdate": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único do registro que será editado"
          },
          "category": {
            "type": "string",
            "description": "identificador unico da categoria do curso"
          },
          "certificated": {
            "type": "boolean",
            "description": "flag para saber se emite certificado ou não"
          },
          "name": {
            "type": "string",
            "description": "Nome do curso"
          },
          "image": {
            "type": "string",
            "description": "link da imagem do curso"
          },
          "description": {
            "type": "string",
            "description": "descrição de curso"
          },
          "user": {
            "type": "string",
            "description": "identificador unico de usuário"
          }
        }
      },
      "Teacher": {
        "type": "object",
        "properties": {
          "bio": {
            "type": "string",
            "description": "Biografia do professor"
          },
          "name": {
            "type": "string",
            "description": "Nome do Professor"
          },
          "image": {
            "type": "string",
            "description": "link da imagem do Professor"
          },
          "user": {
            "type": "string",
            "description": "identificador unico de usuário"
          }
        }
      },
      "TeacherPost": {
        "type": "object",
        "required": ["name", "bio", "user"],
        "properties": {
          "bio": {
            "type": "string",
            "description": "Biografia do professor"
          },
          "name": {
            "type": "string",
            "description": "Nome do Professor"
          },
          "image": {
            "type": "string",
            "description": "link da imagem do Professor"
          },
          "user": {
            "type": "string",
            "description": "identificador unico de usuário"
          }
        }
      },
      "TeacherResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Teacher"
          }
        }
      },
      "TeachersearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Teacher"
            }
          }
        }
      },
      "TeacherUpdate": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único do registro que será editado"
          },
          "bio": {
            "type": "string",
            "description": "Biografia do professor"
          },
          "name": {
            "type": "string",
            "description": "Nome do Professor"
          },
          "image": {
            "type": "string",
            "description": "link da imagem do Professor"
          },
          "user": {
            "type": "string",
            "description": "identificador unico de usuário"
          }
        }
      }
    },
    "requestBodies": {
      "User": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserPost"
            }
          }
        }
      },
      "Class": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Class"
            }
          }
        }
      },
      "Teacher": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Teacher"
            }
          }
        }
      },
      "Course": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Course"
            }
          }
        }
      },
      "UserConfirm": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["id", "confirmationCode"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identificador único do usuário"
                },
                "confirmationCode": {
                  "type": "string",
                  "description": "Código de confirmação da conta"
                }
              }
            }
          }
        }
      },
      "UserResetPass": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserResetPost"
            }
          }
        }
      },
      "Contact": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ContactPost"
            }
          }
        },
        "description": "Objeto de contato válido para o cadastro:",
        "required": true
      },
      "ContactUpdate": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ContactPost"
            }
          }
        }
      },
      "Category": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CategoryPost"
            }
          }
        },
        "description": "Objeto de Categoria válido para o cadastro:",
        "required": true
      },
      "Answer": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AnswerPost"
            }
          }
        },
        "description": "Objeto de Categoria válido para o cadastro:",
        "required": true
      },
      "ComplementaryAnswer": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ComplementaryAnswerPost"
            }
          }
        },
        "description": "Objeto de Categoria válido para o cadastro:",
        "required": true
      }
    }
  }
}
